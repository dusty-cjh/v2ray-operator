---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: v2rayusers.vpn.hdcjh.xyz
spec:
  group: vpn.hdcjh.xyz
  names:
    kind: V2rayUser
    listKind: V2rayUserList
    plural: v2rayusers
    singular: v2rayuser
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: V2rayUser is the Schema for the v2rayusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: V2rayUserSpec defines the desired state of V2rayUser 1. fill
              the basic info, e.g, user id / email / level 2. which nodes should be
              selected 3. which tag should be added to the user
            properties:
              inboundTag:
                default: ws+vmess
                enum:
                - ws+vmess
                - ws+vless
                type: string
              nodeList:
                additionalProperties:
                  properties:
                    info:
                      items:
                        properties:
                          domain:
                            default: external.hdcjh.xyz
                            type: string
                          ip:
                            description: Fetch from node info if not provided
                            type: string
                          name:
                            type: string
                          port:
                            default: 443
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          svcName:
                            description: filled by v2ray-operator
                            type: string
                        type: object
                      type: array
                    size:
                      format: int32
                      maximum: 10
                      minimum: 1
                      type: integer
                    virginIp:
                      default: false
                      description: whether the node ip only owned by this v2ray client
                      type: boolean
                  type: object
                type: object
              outboundTag:
                default: ws+vmess
                enum:
                - ws+vmess
                - ws+vless
                - freedom
                - blackhole
                type: string
              user:
                properties:
                  email:
                    maxLength: 32
                    minLength: 8
                    type: string
                  id:
                    description: uuid field, if empty, will be generated automatically
                    maxLength: 36
                    minLength: 36
                    pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
                    type: string
                  level:
                    type: integer
                type: object
            required:
            - nodeList
            type: object
          status:
            description: V2rayUserStatus defines the observed state of V2rayUser
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
